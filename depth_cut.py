# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11DJae9JpSzI2JtOESaU6xLv8ljQdmBrN
"""


from cv2 import _OutputArray_DEPTH_MASK_32F
import numpy as np
# import matplotlib.pyplot as plt
# out = np.load('/content/background./salvador dali the persistence of memory.npy')
# plt.imshow(out)
def cut(out):
  sorted = np.sort(out, axis=None)
  # print(sorted)
  x=np.arange(0,len(sorted))
  # plt.plot(x,sorted)
  # # plt.colorbar()
  # plt.show()

  differential = []
  init_Fcut=5000
  init_Ecut=5000
  for i in range(len(sorted)-1):
    if i >= init_Fcut and (len(sorted)-init_Ecut)>=i :
      differential.append((sorted[i+1]-sorted[i]))
  # plt.plot(differential)

  x=np.arange(0,len(sorted))

  x2=np.arange(1,len(sorted))

  max= np.max(differential)

  for i in range(len(differential)):
    if differential[i]==max:
      max_point = i
      break
  cut = sorted[max_point]

  # plt.plot(differential)
  # plt.axvline(x=max_point, color='r', linestyle='--', linewidth=3)
  # # plt.colorbar()
  # plt.show()

  # plt.axvline(x=max_point, color='r', linestyle='--', linewidth=3)
  # plt.plot(sorted)
  # plt.show()

  # print(max_point)
  # print(max)
  # print(cut)

  out[out < cut] = 0
  out[out > cut] = 255
  # plt.imshow(out)
  return out